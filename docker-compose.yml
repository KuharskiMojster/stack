version: "2"
services:

  db:
    image: "postgres"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"

  recipe-crud:
    #image: "recipe-crud"
    build: ../recipe-crud
    environment:
      -SPRING_DATASOURCE_URL: "jdbc:postgresql://db:5432/postgres"
      -SPRING_DATASOURE_USERNAME: "postgres"
      -SPRING_DATASOURCE_PASSWORD: "postgres"
      -KAFKA_ADDRESS: "kafka:9092"
    ports:
      - "8080:8080"
    depends_on:
      - db
      - kafka

  recipe-filter:
    #image: "recipe-filter"
    build: ../filter
    environment:
      -SPRING_DATASOURCE_URL: "jdbc:postgresql://db:5432/postgres"
      -SPRING_DATASOURE_USERNAME: "postgres"
      -SPRING_DATASOURCE_PASSWORD: "postgres"
    depends_on:
      - db
    ports:
      - "9080:9080"

  subscriptions:
    #image: "subscriptions"
    build: ../subscriptions
    environment:
      -KAFKA_RATINGS_TOPIC: "ratings"
      -KAFKA_COMMENTS_TOPIC: "comments"
      -KAFKA_ADDRESS: "kafka:9092"
    depends_on:
      - kafka
    ports:
      - "7080:8080"

  ratings:
    #image: "ratings"
    build: ../ratings
    environment:
      -KAFKA_TOPIC: "subscriptions"
      -KAFKA_ADDRESS: "kafka:9092"
    depends_on:
      - kafka
    ports:
      - "6080:8080"

  neo:
    # this image is AGPLv3 licensed: https://www.graphfoundation.org/projects/ongdb/
    build: neo4j/
    restart: always
    hostname: neo
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/logs:/logs
      - ./neo4j/plugins:/var/lib/neo4j/plugins
      - ./neo4j/conf:/conf
    ports:
      - 7474:7474
      - 7687:7687
    environment:
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_AUTH=neo4j/pass

  zk:
    # this image is Apache 2.0 licensed: https://hub.docker.com/r/confluentinc/cp-zookeeper
    hostname: zk
    restart: always
    image: confluentinc/cp-zookeeper:5.3.0
    ports:
      - "2181:2181"
    environment:
      CONFLUENT_SUPPORT_METRICS_ENABLE: 0
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    # this image is Apache 2.0 licensed: https://hub.docker.com/r/confluentinc/cp-kafka
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      CONFLUENT_SUPPORT_METRICS_ENABLE: 0
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zk:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  ksql:
  # the base of this image is Apache 2.0 licensed: https://hub.docker.com/r/confluentinc/cp-kafka-connect-base/
    image: confluentinc/cp-ksql-server
    restart: always
    ports:
      - 8088:8088
    environment:
      CONFLUENT_SUPPORT_METRICS_ENABLE: 0
      KSQL_BOOTSTRAP_SERVERS: "kafka:9092"
      KSQL_LISTENERS: http://0.0.0.0:8088
